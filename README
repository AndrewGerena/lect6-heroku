Most of this code was shamelessly taken from Binarynelle Sune's HW5 submission!
Thanks for letting me clone the code and use it myself :)

This is a simple demo of Heroku using the Twitter API.

To use this repository, you must follow these steps:
0. Sign up for the twitter developer portal at https://developer.twitter.com
1. Navigate to https://developer.twitter.com/en/portal/projects-and-apps and make a new app.
2. Click on the key symbol after creating your project, and it will take you to your keys and tokens.
    If needed, you can regenerate your access token and secret.
3. Clone this repository by using git clone http://www.github.com/Sresht/lect6-heroku
4. Run the following in your terminal:
    sudo pip install tweepy
    (or) sudo pip3 install tweepy
    (or) pip install tweepy
    (or) pip3 install tweepy
5. Install flask using the same process as above ([sudo] pip[3] install flask)
6. Install python-dotenv using the same process as above ([sudo] pip[3] install python-dotenv)
7. Add your secret keys (from step 2) by making a new root-level file called tweepy.env and populating it as follows.
    **** MAKE SURE THE FILE AND VARIABLES ARE NAMED THE EXACT SAME WAY AS DESCRIBED!!!***
    KEY=''
    KEY_SECRET=''
    TOKEN=''
    TOKEN_SECRET=''
8. Run `python user_tweets.py`
9. If on Cloud9, preview templates/index.html. This should successfully render the HTML!
10. Sign up for heroku at heroku.com 
11. Install heroku by running npm install -g heroku
13. Go through the following steps:
    heroku login -i
    heroku create
    git push heroku master
14. Navigate to your newly-created heroku site!
14.5. Add your secret keys (from tweepy.env) by going to https://dashboard.heroku.com/apps
    and clicking into your app. Click on Settings, then scroll to "Config Vars." Click
    "Reveal Config Vars" and add the key value pairs for each variable in user_tweets.py
    Your config var key names should be:
    KEY
    KEY_SECRET
    TOKEN
    TOKEN_SECRET
15. Configure requirements.txt with all requirements needed to run your app.
16. Configure Procfile with the command needed to run your app.
17. If you are still having issues, you may use heroku logs --tail to see what's wrong.
